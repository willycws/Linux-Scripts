Setup Heroku CLI in Ubuntu
--------------------------
1. Make sure Ruby is installed. Check ruby version: ruby -v
2. sudo wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh
3. heroku --> will install the Heroku CLI

Login to Heroku via CLI
-----------------------
1. heroku login
2. Enter email
3. Enter password

Publishing website (first time) to Heroku (PHP)
----------------------------------
1. Login to heroku using CLI - heroku login
2. Check whether the following components are installed:
    a. php -v
    b. composer -V (if not installed, use "curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer")
    c. git --version
3. cd ~/Documents 
4. git clone https://github.com/heroku/php-getting-started.git (clone a sample site)
5. cd php-getting-started
6. heroku create (create a new site in heroku)
7. git push heroku master (push the site into heroku)
8. heroku ps:scale web=1 (ensure that at least one instance of the app is running)
9. heroku open (launch the website)
10. Login to https://dashboard.heroku.com/apps and click on the site that you have created just now
11. Go to Settings tab --> rename the site name to your own site name, this will be http://<OWN-SITE-NAME>.herokuapp.com
12. Scroll down the Settings page, and copy the Git URL https://git.heroku.com/<OWN-SITE-NAME>.git
12. Back to your CLI, remove the whole folder php-getting-started
13. cd ~/Documents 
14. git clone https://git.heroku.com/<OWN-SITE-NAME>.git
15. cd web
16. Remove the rest of the content in the web folder except index.php and .htaccess
17. Modify the index.php. Remove everything and insert <?php header( 'Location: /index.html' ) ;  ?>
18. Replace your own site files in the web folder
19. heroku git:remote -a <OWN-SITE-NAME>
20. git add . (add the new files)
21. git commit -m "My site ready for deployment."
22. git push heroku master
23. heroku open (launch the website)
24. heroku logs --tail (read logs)

Publishing Node.js (first time) to Heroku (PHP)
----------------------------------
1. Login to heroku using CLI - heroku login
2. Check whether the following components are installed:
    a. node -v
    b. npm -v
    c. git --version
3. cd ~/Documents 
4. git clone https://github.com/heroku/node-js-getting-started.git (clone a sample site)
5. cd node-js-getting-started
6. heroku create (create a new site in heroku)
7. git push heroku master (push the site into heroku)
8. heroku ps:scale web=1 (ensure that at least one instance of the app is running)
9. heroku open (launch the website)
10. Login to https://dashboard.heroku.com/apps and click on the site that you have created just now
11. Go to Settings tab --> rename the site name to your own site name, this will be http://<OWN-SITE-NAME>.herokuapp.com
12. Scroll down the Settings page, and copy the Git URL https://git.heroku.com/<OWN-SITE-NAME>.git
12. Back to your CLI, remove the whole folder node-js-getting-started
13. cd ~/Documents 
14. git clone https://git.heroku.com/<OWN-SITE-NAME>.git
15. cd <OWN-SITE-NAME>
16. Add in your own nodejs file <own_nodejs_file.js>
17. Modify the Procfile file to make sure it is pointing to <own_nodejs_file.js>
18. Modify the package.json to make sure all the dependencies required by your nodejs file are added
{
  "name": "own_nodejs_file",
  "version": "0.0.1",
  "description": "A node js example",
  "engines": {
    "node": "5.9.1"
  },
  "main": "own_nodejs_file.js",
  "scripts": {
    "start": "node own_nodejs_file.js"
  },
  "dependencies": {
	"wiki-infobox": "0.4.0",
	"node-rest-client": "1.8.0",
	"fs": "0.0.2",
	"uuid": "2.0.2",
	"hashtable": "2.0.1",
	"q": "1.4.1",
	"tree-model": "1.0.4",
	"ejs": "2.4.1",
    "express": "4.13.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/heroku/node-js-getting-started"
  },
  "keywords": [
    "node",
    "heroku",
    "express"
  ],
  "license": "MIT"
}
19. heroku git:remote -a <OWN-SITE-NAME>
20. git add . (add the new files)
21. git commit -m "My site ready for deployment."
22. git push heroku master
23. heroku open (launch the website)
24. heroku logs --tail (read logs)

Publishing a nodeJs to Heroku
-----------------------------
1. Check the following applications are installed:
    a. node -v
    b. npm -v
    c. git --version
2. 



References:
-----------
https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up
