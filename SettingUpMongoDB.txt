Installing MongoDB (using terminal)
-----------------------------------
1. Download the mongodb tgz package mongodb-linux-x86_64-2.6.0.tgz
2. Untar the package to ~/mongodb-linux-x86_64-2.6.0
3. create a /data/db directory. You may create it in another location: ~/mongodb/data/db
4. Change the ~/mongodb permission: sudo chmod 775 -R ~/mongodb
5. Try running the mongod instance: 
          cd ~/mongodb-linux-x86_64-2.6.0/bin
          ./mongod --dbpath ~/mongodb/data/db
6. CTRL+C to exit from mongod      

Create a keyfile
----------------
1. openssl rand -base64 741 > ~/mongodb/mongodb-keyfile
2. cd ~/mongodb
3. chmod 600 mongodb-keyfile

Setting up new replica set without authentication
----------------------------------------------
1. create the folder ~/mongodb/data/db
2. Startup the mongod nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongod --dbpath ~/mongodb/data/db  --port 27018 > ~/nohup/nohup &
3. cd ~/mongodb-linux-x86_64-2.6.0/bin
4. ./mongo --port 27018
5. rs.initiate()
6. CTRL+C to exit the shell
7. ./mongo --port 27018 and u should be able to see rs0:PRIMARY

Setting up a new shard server without authentication
-----------------------------------------------------
1. Copy 1 set of mongodb-linux-x86_64-2.6.0 to ~/mongodb-config-servers and rename the folder to mongodb-linux-x86_64-2.6.0-shard
2. create the folder ~/mongodb/data/db-shard 
3. Startup the mongod nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-shard/bin/mongod --dbpath ~/mongodb/data/db-shard --shardsvr --port 10001 > ~/nohup/nohup &

Setup mongodb config server(hosted the same server as the main mongodb server)
------------------------------------------------------------------------------
1. Copy 3 sets of mongodb-linux-x86_64-2.6.0 to ~/mongodb-config-servers and label each folder accordingly.
          mongodb-linux-x86_64-2.6.0-config1
          mongodb-linux-x86_64-2.6.0-config2
          mongodb-linux-x86_64-2.6.0-config3
2. Create a data/db folder for each of the config server
          ~/mongodb/data/db-config1
          ~/mongodb/data/db-config2
          ~/mongodb/data/db-config3
3. chmod 775 -R ~/mongodb-config-servers
4. startup the config server 
          ./startMongodConfig1.sh
          ./startMongodConfig2.sh
          ./startMongodConfig3.sh

Adding the shard to the main mongodb server
-------------------------------------------
1. Startup the mongos (located in the bin folder of the main mongodb server) nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongos --configdb <localhost_ip_address>:27021,<localhost_ip_address>:27022,<localhost_ip_address>:27023  --port 27017 > ~/nohup/nohup &
2. use mongo shell ./bin/mongo
3. use admin
4. db.runCommand( { addshard : "127.0.0.1:10001" } );
{ "shardAdded" : "shard0000", "ok" : 1 }
5. db.runCommand( { enablesharding  : "test" } );
6. test the shard db.runCommand( { shardcollection : "test.cTest", key : { Name : 1 } } );
7. In a linux machine, use MongoChef to import the exported collection to test database. No authentication required. 
8. Activate shard for collection that you want to have sharding i.e. sh.shardCollection("test.post", { _id: 1} )
9. use the MongoChef to verify your collection have the shared: true

Add authentication 
------------------
1. Kill all any existing mongodb process, config server, sharding, router
2. Start in the following order config-server-1, config-server-2, config-server-3, shard server, mongod, mongos with authentication (--keyFile ~/mongodb/mongodb-keyfile)
3. enter mongo shell ./bin/mongo
4. use admin
5. db.createUser(
  {
    user: "admin",
    pwd: "***********",
    roles:
    [
      {
        role: "clusterAdmin",
        db: "admin"
      },
      {
        role: "userAdminAnyDatabase",
        db: "admin"
      },
      {
        role: "dbAdminAnyDatabase",
        db: "admin"
      },
      {
        role: "readWrite",
        db: "admin"
      },
      {
        role: "dbAdmin",
        db: "admin"
      },
	{
        role: "userAdmin",
        db: "admin"
      }
    ]
  }
)
6. use test
7. db.createUser(
  {
    user: "h*****admin",
    pwd: "********",
    roles:
    [
      {
        role: "readWrite",
        db: "test"
      },
      {
        role: "dbAdmin",
        db: "test"
      },
	{
        role: "userAdmin",
        db: "test"
      }
    ]
  }
)

db.createUser(
  {
    user: "hs****app",
    pwd: "St******",
    roles:
    [
      {
        role: "readWrite",
        db: "test"
      },
      {
        role: "dbAdmin",
        db: "test"
      }
    ]
  }
)
8. try the newly added account db.auth("username","password")



shell script to Start main MongoDB server
-----------------------------------------
~/mongodb-linux-x86_64-2.6.0/startMongodAuth.sh (with authentication)
nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongod --keyFile ~/mongodb/mongodb-keyfile --replSet "rs0" --dbpath ~/mongodb/data/db  --port 27018 > ~/nohup/nohup &

~/mongodb-linux-x86_64-2.6.0/startMongod.sh (without authentication)
nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongod  --replSet "rs0" --dbpath ~/mongodb/data/db  --port 27017 > ~/nohup/nohup &

shell script to Start MongoDB router
------------------------------------
~/mongodb-linux-x86_64-2.6.0/startMongosAuth.sh (with authentication)
nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongos --keyFile ~/mongodb/mongodb-keyfile --configdb <config_server_ip_address>:27019,<config_server_ip_address>:27019,<config_server_ip_address>:27019  --port 27017 > ~/nohup/nohup &
if all the 3 config server is located in the same server, then all 3 config server must have different port number

~/mongodb-linux-x86_64-2.6.0/startMongos.sh (without authentication)
nohup ~/mongodb-linux-x86_64-2.6.0/bin/mongos --configdb <ip_address>:27019,<ip_address>:27019,<ip_address>:27019  --port 27017 > ~/nohup/nohup &
if all the 3 config server is located in the same server, then all 3 config server must have different port numb

shell script to Start MongoDB config server
-------------------------------------------
startMongodAuthConfig1.sh
nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-config1/bin/mongod --keyFile ~/mongodb/mongodb-keyfile  --dbpath ~/mongodb/data/db-config1  --configsvr --port 27021 > ~/nohup/nohup &
if this config server is hosted on the same server as the other 2 config servers, then they must have different port number, otherwise they can have the same port number.

startMongodAuthConfig2.sh
nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-config2/bin/mongod --keyFile ~/mongodb/mongodb-keyfile  --dbpath ~/mongodb/data/db-config2 --configsvr --port 27022 > ~/nohup/nohup &
if this config server is hosted on the same server as the other 2 config servers, then they must have different port number, otherwise they can have the same port number.

startMongodAuthConfig3.sh
nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-config3/bin/mongod --keyFile ~/mongodb/mongodb-keyfile  --dbpath ~/mongodb/data/db-config3 --configsvr --port 27023 > ~/nohup/nohup &
if this config server is hosted on the same server as the other 2 config servers, then they must have different port number, otherwise they can have the same port number.

shell script to Start MongoDB shard server
------------------------------------------
startMongodAuthShard.sh
nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-shard/bin/mongod --keyFile ~/mongodb/mongodb-keyfile --dbpath ~/mongodb/data/db-shard --shardsvr --port 10001 > ~/nohup/nohup &

startMongodShard.sh
nohup ~/mongodb-config-servers/mongodb-linux-x86_64-2.6.0-shard/bin/mongod --dbpath ~/mongodb/data/db-shard --shardsvr --port 10001 > ~/nohup/nohup &

Mongodb setup links
--------------------
https://docs.mongodb.org/v2.6/tutorial/deploy-shard-cluster/
https://docs.mongodb.org/v2.6/reference/method/sh.shardCollection/
http://stackoverflow.com/questions/8552187/mongodb-sharding-example
