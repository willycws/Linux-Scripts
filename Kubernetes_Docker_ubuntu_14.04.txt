http://blog.guthnur.net/kubernetes-ubuntu-installation/

1. Lets get the pre-requisite software packages installed

sudo apt-get update
asudo pt-get install ssh
sudo apt-get install docker.io
sudo apt-get install curl
sudo apt-get install git


2. Password-less ssh login setup, accept all the default parameters in the prompt of the below command (required for Kubernetes installation) Assuming your account is root, then the path start with /root/ otherwise is the name of your root account

$ ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
e1:c9:a5:dd:80:ee:cd:f0:c8:11:6c:a5:d4:ba:ff:cc root@vkohli-Latitude-E7440
The key's randomart image is:

3a. Copy the ssh id_rsa key locally

$ ssh-copy-id -i /root/.ssh/id_rsa.pub 127.0.0.1

3b. In case this fails you can do it by hand. By doing:

$ cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys


4. Validate the password-less ssh-login

$ ssh root@127.0.0.1
$exit
logout
Connection to 127.0.0.1 closed

5. Get the Kubernetes release bundle from the official github repository
cd ~/Downloads
$ wget https://github.com/GoogleCloudPlatform/kubernetes/releases/download/v1.0.1/kubernetes.tar.gz

6. Untar the Kubernetes bundle in the same directory

$ tar -xvf kubernetes.tar.gz

7. We will build the binaries of Kubernetes code specifically for ubuntu cluster

$ cd kubernetes/cluster/ubuntu

8. Execute the following shell script

$ ./build.sh
Download flannel release ...
......
Done! All your commands locate in ./binaries dir

9. This shell script will download and build the latest version of K8s, etcd and flannel binaries which can be found at following location;

$ cd binaries
$ ls
kubectl  master  minion

kubectl binary controls the Kubernetes cluster manager and the folder master & minion contains the binaries built for the purpose of configuring K8s master and node respectively.

10. Configure the cluster information by editing only the following parameters of the file cluster/ubuntu/config-default.sh in the editor of your choice.

$ cd ~/Downloads/ubernetes/cluster/ubuntu
$ sudo vi config-default.sh
export nodes="root@127.0.0.1"
export roles="ai"
export NUM_MINIONS=${NUM_MINIONS:-1}

Only update the above mentioned information in the file, rest of the configuration will remain as it is. The first variable nodes defines all the cluster nodes, in our case same machine will be configured as master and node so it contains only one entry.The role below “ai” specifies that same machine will act as master, “a” stands for master and “i” stands for node.

11. Now, we will be starting the cluster with the following command;

$ cd kubernetes/cluster
$ KUBERNETES_PROVIDER=ubuntu ./kube-up.sh
Starting cluster using provider: ubuntu
........
Kubernetes master is running at http://127.0.0.1:8080
